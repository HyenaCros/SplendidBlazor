@inject CompileService _compileService
@inject HttpClient _httpClient

@if (_type != null)
{
    @dynamicComponent(_type)
}

@code {
    private Type _type;
    
    [Parameter]
    public Type DefaultType { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await _compileService.Init();
        _compileService.DynamicAssembly.Subscribe(assembly =>
        {
            _type = assembly?.GetExportedTypes().FirstOrDefault(x => x.Name == DefaultType.Name) ?? DefaultType;
            StateHasChanged();
        });
    }

    private RenderFragment dynamicComponent(Type t) => builder =>
    {
        builder.OpenComponent(0, t);
        builder.CloseComponent();
    };

}